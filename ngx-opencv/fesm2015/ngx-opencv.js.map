{"version":3,"file":"ngx-opencv.js","sources":["ng://ngx-opencv/lib/ngx-open-cv.service.ts","ng://ngx-opencv/lib/ngx-opencv.module.ts","ng://ngx-opencv/ngx-opencv.ts"],"sourcesContent":["import {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {OpenCVConfig, OpenCVState} from './models';\r\n\r\nexport const OpenCvConfigToken = new InjectionToken<OpenCVConfig>('OpenCV config object token');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxOpenCVService {\r\n\r\n  cvState = new BehaviorSubject<OpenCVState>({\r\n    ready: false,\r\n    error: false,\r\n    loading: true,\r\n    state: 'loading'\r\n  });\r\n  configModule: OpenCvConfigModule;\r\n\r\n  constructor(@Inject(OpenCvConfigToken) options: OpenCVConfig, private _ngZone: NgZone) {\r\n    if (!options) {\r\n      options = {};\r\n    }\r\n    this.configModule = this.generateConfigModule(options);\r\n    this.loadOpenCv();\r\n  }\r\n\r\n  /**\r\n   * load the OpenCV script\r\n   */\r\n  loadOpenCv() {\r\n    this.cvState.next( this.newState('loading'));\r\n    // create global module variable\r\n    window['Module'] = this.configModule;\r\n\r\n    // create script element and set attributes\r\n    const script = <HTMLScriptElement> document.createElement('script');\r\n    script.setAttribute('async', '');\r\n    script.setAttribute('type', 'text/javascript');\r\n\r\n    // listen for errors\r\n    script.addEventListener('error', () => {\r\n      const err = new Error('Failed to load ' + this.configModule.scriptUrl);\r\n      this.cvState.next(this.newState('error'));\r\n      this.cvState.error(err);\r\n    }, {passive: true});\r\n\r\n    // set script url\r\n    script.src = this.configModule.scriptUrl;\r\n    // insert script as first script tag\r\n    const node = document.getElementsByTagName('script')[0];\r\n    if (node) {\r\n      node.parentNode.insertBefore(script, node);\r\n    } else {\r\n      document.head.appendChild(script);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * generates a new state object\r\n   * @param change - the new state of the module\r\n   */\r\n  private newState(change: 'loading'|'ready'|'error'): OpenCVState {\r\n    const newStateObj: OpenCVState = {\r\n      ready: false,\r\n      loading: false,\r\n      error: false,\r\n      state: ''\r\n    };\r\n    Object.keys(newStateObj).forEach(key => {\r\n      if (key !== 'state') {\r\n        if (key === change) {\r\n          newStateObj[key] = true;\r\n          newStateObj.state = key;\r\n        } else {\r\n          newStateObj[key] = false;\r\n        }\r\n      }\r\n    });\r\n    return newStateObj;\r\n  }\r\n\r\n  /**\r\n   * generates a config module for the global Module object\r\n   * @param options - configuration options\r\n   */\r\n  private generateConfigModule(options: OpenCVConfig): OpenCvConfigModule {\r\n    return {\r\n      scriptUrl: options.openCVDirPath ? `${options.openCVDirPath}/opencv.js` : `/assets/opencv/opencv.js`,\r\n      wasmBinaryFile: 'opencv_js.wasm',\r\n      usingWasm: true,\r\n      onRuntimeInitialized: () => {\r\n        this._ngZone.run(() => {\r\n          console.log('openCV Ready');\r\n          this.cvState.next(this.newState('ready'));\r\n          if (options.runOnOpenCVInit) {\r\n            options.runOnOpenCVInit();\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * describes the global Module object that is used to initiate OpenCV.js\r\n */\r\ninterface OpenCvConfigModule {\r\n  scriptUrl: string;\r\n  wasmBinaryFile: string;\r\n  usingWasm: boolean;\r\n  onRuntimeInitialized: Function;\r\n}\r\n\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {OpenCVConfig} from './models';\r\nimport {NgxOpenCVService, OpenCvConfigToken} from './ngx-open-cv.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [],\r\n  providers: [NgxOpenCVService]\r\n})\r\nexport class NgxOpenCVModule {\r\n  static forRoot(config: OpenCVConfig): ModuleWithProviders<NgxOpenCVModule> {\r\n    return {\r\n      ngModule: NgxOpenCVModule,\r\n      providers: [{ provide: OpenCvConfigToken, useValue: config }]\r\n    };\r\n  }\r\n}\r\n\r\nconst a = 0;\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}